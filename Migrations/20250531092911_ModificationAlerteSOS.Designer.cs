// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Prospecteurs44Back.Data;

#nullable disable

namespace Prospecteurs44Back.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250531092911_ModificationAlerteSOS")]
    partial class ModificationAlerteSOS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Prospecteurs44Back.Model.AlerteSOS", b =>
                {
                    b.Property<int>("IdAlerte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAlerte"));

                    b.Property<DateTime>("DateAlerte")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateObjetPerdu")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptionAlerte")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("LieuObjetPerdu")
                        .HasColumnType("text");

                    b.Property<string>("TitreAlerte")
                        .HasColumnType("text");

                    b.HasKey("IdAlerte");

                    b.ToTable("AlerteSOS");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventId"));

                    b.Property<DateTime>("EventDateCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EventDateModification")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventDescription")
                        .HasColumnType("text");

                    b.Property<string>("EventName")
                        .HasColumnType("text");

                    b.Property<string>("EventStatus")
                        .HasColumnType("text");

                    b.Property<int>("TypeSortie")
                        .HasColumnType("integer");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.InformationsPersonnelles", b =>
                {
                    b.Property<int>("InformationsPersonnellesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InformationsPersonnellesID"));

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InformationsPersonnellesID");

                    b.ToTable("InformationsPersonnelles");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("InformationsPersonnellesID")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserParrainUserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserPseudo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("EventId");

                    b.HasIndex("InformationsPersonnellesID");

                    b.HasIndex("UserParrainUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.User", b =>
                {
                    b.HasOne("Prospecteurs44Back.Model.Event", null)
                        .WithMany("UsersInscrits")
                        .HasForeignKey("EventId");

                    b.HasOne("Prospecteurs44Back.Model.InformationsPersonnelles", "InformationsPersonnelles")
                        .WithMany()
                        .HasForeignKey("InformationsPersonnellesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prospecteurs44Back.Model.User", "UserParrain")
                        .WithMany("Filleuls")
                        .HasForeignKey("UserParrainUserId");

                    b.Navigation("InformationsPersonnelles");

                    b.Navigation("UserParrain");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.Event", b =>
                {
                    b.Navigation("UsersInscrits");
                });

            modelBuilder.Entity("Prospecteurs44Back.Model.User", b =>
                {
                    b.Navigation("Filleuls");
                });
#pragma warning restore 612, 618
        }
    }
}
